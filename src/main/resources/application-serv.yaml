server:
  port: ${GATEWAY_IN_PORT}
spring:
  cloud:
    gateway:
      default-filters:
        - TokenRelay=
      routes:
        - id: API
          uri: http://${BLS_HOST}:${PORT_BLS} #tg_bls_env , composer_env
          predicates:
            - Path=${CONTEXT_PATH}**
          order: 0
        - id: WEB
          uri: http://${FRONT_HOST}:${FRONT_PORT} #.FRONT.ENV
          predicates:
            - Path=/**
          order: 1



  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: ${CLIENT_ID} #KEYCLOAK ENV
            client-secret: ${CLIENT_SECRET}
            authorization-grant-type: authorization_code
            redirect-uri: ${WEB_IP}:${GATEWAY_PORT}/login/oauth2/code/keycloak # COMPOSER
            scope:
              - email
              - profile
              - roles
              - openid
              - offline_access
        provider:
          keycloak:
#            issuer-uri: ${KEYCLOAK}:${KEYCLOAK_PORT}/realms/${REALM_NAME} #KEYCLOAK ENV
            issuer-uri: ${KEYCLOAK}/auth/realms/${REALM_NAME}
            user-name-attribute: preferred_username
      # ???????? ENV
      #??? ?? ENV
      # ???????? ENV
      #??????? ?? ENV

      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOAK}/auth/realms/${REALM_NAME} #KEYCLOAK ENV